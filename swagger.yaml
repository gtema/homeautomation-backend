swagger: "2.0"
info:
  description: "MyHomeAutomatization"
  version: "1.0.0"
  title: "Swagger HomeAutomatization"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "artem.goncharov@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v1"
tags:
- name: "product_item"
  description: "All Items of the particular product"

schemes:
  - http
  - https

consumes:
  - application/json
produces:
  - application/json
  - application/xml

paths:

  /product_item/{item_id}:
    get:
      tags:
      - "product_item"
      operationId: "getProductItemById"
      description: "get valid items of particular product"
      summary: "get valid items for the product"

      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Product_Item"
        401:
          $ref: "#/responses/NotAuthorized"
        404:
          $ref: "#/responses/NotFound"
        500:
          $ref: "#/responses/GeneralError"
    put:
      tags:
      - "product_item"
      operationId: "updateProductItemById"
      summary: "update the item"
      parameters:
      - in: "body"
        name: "body"
        description: "object that needs to be update in the store"
        required: true
        schema:
          $ref: "#/definitions/Product_Item"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Product_Item"
        401:
          $ref: "#/responses/NotAuthorized"
        404:
          $ref: "#/responses/NotFound"
        500:
          $ref: "#/responses/GeneralError"
    delete:
      tags:
      - "product_item"
      operationId: "deleteProductItemById"
      summary: "delete item"
      description: "mark disposed"
      responses:
        204:
          description: "success"
        405:
          description: "call without ID is not allowed"
        401:
          $ref: "#/responses/NotAuthorized"
        404:
          $ref: "#/responses/NotFound"
        500:
          $ref: "#/responses/GeneralError"
    parameters:
      - name: "item_id"
        in: "path"
        required: true
        type: "string"
        description: "item id"

  /product_item:
    post:
      tags:
      - "product_item"
      operationId: "addProductItem"
      description: "create product item"
      summary: "add new product item"
      parameters:
      - in: "body"
        name: "body"
        description: "object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Product_Item"
      responses:
        200:
          description: "success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product_Item"
        401:
          $ref: "#/responses/NotAuthorized"
        500:
          $ref: "#/responses/GeneralError"
      security:
      - BasicAuth: []
      - ApiKeyAuth: []

  /product_items_by_product_id/{product_id}:
    get:
      tags:
      - "product_item"
      description: "get valid items of particular product"
      summary: "get valid items for the product"
      parameters:
      - name: "product_id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product_Item"
        401:
          $ref: "#/responses/NotAuthorized"
        404:
          $ref: "#/responses/NotFound"
        500:
          $ref: "#/responses/GeneralError"

securityDefinitions:
  ApiKeyAuth:
    type: "apiKey"
    name: "API_KEY"
    in: "header"
  BasicAuth:
    type: "basic"

definitions:
  Product_Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      parent_id:
        type: "integer"
        format: "int64"
        description: "Parent category id"
      name:
        type: "string"
        description: "Category name"
      prio:
        type: "integer"
        format: "int32"
        description: "Category name"

  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      category_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "product name"
      volume:
        type: "string"
        description: "volume"
      sum_amounts:
        type: "boolean"
        description: "present sum of valid items's amounts as volume if on, quantity of items instead"

  Product_Item:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      product_id:
        type: "integer"
        format: "int64"
      amount:
        type: "number"
        format: "double"
      is_started:
        type: "boolean"
        description: "item is open"
      is_disposed:
        type: "boolean"
        description: "item is disposed"
      create_date:
        type: "string"
        format: "date-time"
      expiry_date:
        type: "string"
        format: "date-time"
      is_valid:
        type: "boolean"
        description: "whether item is valid"

  GeneralError:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "error code"
      message:
        type: "string"
        description: "error message"

responses:
  NotFound:
    description: Entity not found.
  IllegalInput:
    description: Illegal input for operation.
  NotAuthorized:
    description: Not Authorized
  GeneralError:
    description: General Error
    schema:
      $ref: '#/definitions/GeneralError'
